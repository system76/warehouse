---

name: Continuous Integration

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - "!master"
      - "!staging"

jobs:
  Test:
    runs-on: ubuntu-latest

    container:
      image: elixir:1.11-alpine

    services:
      mysql:
        image: mysql:5.7.24
        env:
          MYSQL_DATABASE: warehouse_test
          MYSQL_ROOT_PASSWORD: warehouse

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install (os)
        run: apk add --no-cache gcc g++ git make musl-dev tar zstd

      - name: Install (mix)
        run: |
          mix local.rebar --force
          mix local.hex --force

      - name: Cache
        uses: actions/cache@v2
        id: cache
        with:
          key: elixir-${{ hashFiles('Dockerfile', 'mix.lock') }}-${{ github.ref }}-test
          restore-keys: |
            elixir-${{ hashFiles('Dockerfile', 'mix.lock') }}-${{ github.ref }}-
            elixir-${{ hashFiles('Dockerfile', 'mix.lock') }}-
            elixir-
          path: |
            _build
            deps

      - name: Install (deps)
        if: steps.cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Run Tests
        run: mix test
        env:
          DB_HOST: mysql

  Format:
    runs-on: ubuntu-latest

    container:
      image: elixir:1.11-alpine

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install (os)
        run: apk add --no-cache gcc g++ git make musl-dev

      - name: Install (mix)
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Run Formatter
        run: mix format --check-formatted

  Credo:
    runs-on: ubuntu-latest

    container:
      image: elixir:1.11-alpine

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install (os)
        run: apk add --no-cache gcc g++ git make musl-dev tar zstd

      - name: Install (mix)
        run: |
          mix local.rebar --force
          mix local.hex --force

      - name: Cache
        uses: actions/cache@v2
        id: cache
        with:
          key: elixir-${{ hashFiles('Dockerfile', 'mix.lock') }}-${{ github.ref }}-credo
          restore-keys: |
            elixir-${{ hashFiles('Dockerfile', 'mix.lock') }}-${{ github.ref }}-
            elixir-${{ hashFiles('Dockerfile', 'mix.lock') }}-
            elixir-
          path: |
            _build
            deps

      - name: Install (deps)
        if: steps.cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Run Credo
        run: mix credo
